function initializeFontLoading(){const loadingOverlay=document.getElementById('loading-spinner');const mainContent=document.getElementById('main-content');if('fonts'in document){const fontLoadingPromise=document.fonts.ready;const timeoutPromise=new Promise((resolve)=>{setTimeout(resolve,2000);});Promise.race([fontLoadingPromise,timeoutPromise]).then(()=>showContent()).catch(()=>showContent());}else{setTimeout(showContent,1000);}
function showContent(){loadingOverlay.classList.add('hidden');mainContent.classList.add('loaded');setTimeout(()=>{if(loadingOverlay&&loadingOverlay.parentNode){loadingOverlay.remove();}},500);}}
if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',initializeFontLoading);}else{initializeFontLoading();}
const requestIdleCallback=window.requestIdleCallback||function(cb){return setTimeout(function(){const start=Date.now();cb({didTimeout:false,timeRemaining:function(){return Math.max(0,50-(Date.now()-start));}});},1);};function processDropcap(){const firstPWithoutTime=document.querySelector('main p:not(:has(time)):not(blockquote p)');if(!firstPWithoutTime)return;firstPWithoutTime.classList.add('drop-cap');const originalHTML=firstPWithoutTime.innerHTML;const tempDiv=document.createElement('div');tempDiv.innerHTML=originalHTML;const textContent=tempDiv.textContent||tempDiv.innerText;const words=textContent.trim().split(/\s+/);if(words.length>=3){const walker=document.createTreeWalker(tempDiv,NodeFilter.SHOW_TEXT,null,false);let targetWordCount=3;let textNodes=[];let node;while((node=walker.nextNode())){textNodes.push(node);}
let splitNode=null;let splitOffset=0;let currentWordCount=0;for(let textNode of textNodes){const nodeText=textNode.textContent;const nodeWords=nodeText.trim().split(/\s+/).filter((word)=>word.length>0);if(currentWordCount+nodeWords.length>=targetWordCount){splitNode=textNode;const wordsNeeded=targetWordCount-currentWordCount;let wordsSeen=0;let splitFound=false;for(let i=0;i<nodeText.length;i++){if(nodeText[i].match(/\s/)){if(wordsSeen>=wordsNeeded){splitOffset=i;splitFound=true;break;}}else if(i===0||nodeText[i-1].match(/\s/)){wordsSeen++;}}
if(wordsSeen>=wordsNeeded&&!splitFound){for(let i=splitOffset;i<nodeText.length;i++){if(nodeText[i].match(/\s/)){splitOffset=i;break;}
if(i===nodeText.length-1){splitOffset=i+1;break;}}}
break;}
currentWordCount+=nodeWords.length;}
if(splitNode&&splitOffset>0){const beforeText=splitNode.textContent.substring(0,splitOffset);const afterText=splitNode.textContent.substring(splitOffset);const firstLetterMatch=beforeText.match(/^\s*(\S)/);const parent=splitNode.parentNode;if(firstLetterMatch){const firstLetter=firstLetterMatch[1];const firstLetterIndex=beforeText.indexOf(firstLetter);const firstLetterDiv=document.createElement('div');firstLetterDiv.className='first-letter';firstLetterDiv.textContent=firstLetter;const remainingText=beforeText.slice(0,firstLetterIndex)+
beforeText.slice(firstLetterIndex+1);const threeWordsSpan=document.createElement('span');threeWordsSpan.className='first-three-words';threeWordsSpan.textContent=remainingText.trim();parent.insertBefore(firstLetterDiv,splitNode);parent.insertBefore(threeWordsSpan,splitNode);}else{const span=document.createElement('span');span.className='first-three-words';span.textContent=beforeText.trim();parent.insertBefore(span,splitNode);}
if(afterText.trim()){splitNode.textContent=afterText;}else{parent.removeChild(splitNode);}
firstPWithoutTime.innerHTML=tempDiv.innerHTML;}}}
window.addEventListener('load',()=>{requestIdleCallback(()=>{processDropcap();},{timeout:2000});});function moveFootnotesToSidenotes(){const sidenoteContainer=document.querySelector('.sidenote-container');if(!sidenoteContainer)return;const footnoteDiv=document.querySelector('.footnote');if(!footnoteDiv)return;const footnoteRefs=document.querySelectorAll('sup[id^="fnref:"] a.footnote-ref');if(!footnoteRefs.length)return;const footnoteMap=new Map();const footnoteItems=footnoteDiv.querySelectorAll('li[id^="fn:"]');footnoteItems.forEach(item=>{const id=item.id;const content=item.innerHTML.replace(/<a class="footnote-backref".*?<\/a>/g,'');footnoteMap.set(id,content);});const contentWrapper=document.querySelector('.column-content');if(contentWrapper){contentWrapper.classList.add('content-with-sidenotes');}
sidenoteContainer.innerHTML='';footnoteRefs.forEach((ref,index)=>{const href=ref.getAttribute('href');if(!href||!href.startsWith('#fn:'))return;const footnoteId=href.slice(1);const footnoteContent=footnoteMap.get(footnoteId);if(footnoteContent){const supElement=ref.closest('sup[id^="fnref:"]');const refParent=supElement?supElement.parentNode:null;if(refParent){const marker=document.createElement('span');marker.className='sidenote-marker';marker.id=`marker-${footnoteId}`;marker.dataset.footnoteId=footnoteId;marker.setAttribute('aria-hidden','true');if(supElement.nextSibling){refParent.insertBefore(marker,supElement.nextSibling);}else{refParent.appendChild(marker);}
const sidenoteFootnote=document.createElement('div');sidenoteFootnote.className='sidenote-footnote';sidenoteFootnote.id=`sidenote-${footnoteId}`;sidenoteFootnote.dataset.footnoteId=footnoteId;const refNumber=ref.textContent;sidenoteFootnote.dataset.refNumber=refNumber;const tempDiv=document.createElement('div');tempDiv.innerHTML=footnoteContent;const paragraphs=tempDiv.querySelectorAll('p');paragraphs.forEach(p=>{const parent=p.parentNode;while(p.firstChild){parent.insertBefore(p.firstChild,p);}
parent.removeChild(p);});sidenoteFootnote.innerHTML=tempDiv.innerHTML;const markerSpan=document.createElement('span');markerSpan.className='sidenote-footnote-marker';markerSpan.textContent=refNumber;sidenoteFootnote.prepend(markerSpan);sidenoteContainer.appendChild(sidenoteFootnote);ref.addEventListener('click',(e)=>{if(window.innerWidth>=1024){e.preventDefault();document.querySelectorAll('.sidenote-footnote').forEach(note=>{note.classList.remove('highlighted');});sidenoteFootnote.classList.add('highlighted');sidenoteFootnote.scrollIntoView({behavior:'smooth',block:'center'});setTimeout(()=>{sidenoteFootnote.classList.remove('highlighted');},2000);}});}}});document.body.classList.add('sidenotes-processed');}
function synchronizeSidenotes(forceUpdate=false){if(window.innerWidth<1024)return;const markers=document.querySelectorAll('.sidenote-marker');const sidenotes=document.querySelectorAll('.sidenote-footnote');const sidenoteContainer=document.querySelector('.sidenote-container');if(!markers.length||!sidenotes.length||!sidenoteContainer)return;const containerRect=sidenoteContainer.getBoundingClientRect();const containerTop=containerRect.top;const containerHeight=containerRect.height;const sidenoteMap=new Map();sidenotes.forEach(note=>{sidenoteMap.set(note.dataset.footnoteId,note);});markers.forEach(marker=>{const footnoteId=marker.dataset.footnoteId;const sidenote=sidenoteMap.get(footnoteId);if(sidenote){const markerRect=marker.getBoundingClientRect();const markerTop=markerRect.top;let relativeTop=markerTop-containerTop;const sidenoteHeight=sidenote.offsetHeight;const maxTop=containerHeight-sidenoteHeight-20;if(relativeTop>maxTop){relativeTop=maxTop;}
if(relativeTop<0){relativeTop=0;}
const currentTop=parseInt(sidenote.style.top)||0;if(forceUpdate||Math.abs(currentTop-relativeTop)>5){sidenote.style.transform=`translateY(${relativeTop}px)`;}
const buffer=100;const isInViewport=(markerRect.top>=-buffer&&markerRect.top<=(window.innerHeight+buffer));if(isInViewport){if(!sidenote.classList.contains('in-view')){sidenote.classList.add('in-view');}}else{if(sidenote.classList.contains('in-view')){sidenote.classList.remove('in-view');}}}});}
let ticking=false;function requestSyncUpdate(){if(!ticking){requestAnimationFrame(()=>{synchronizeSidenotes();ticking=false;});ticking=true;}}
document.addEventListener('DOMContentLoaded',()=>{requestIdleCallback(()=>{moveFootnotesToSidenotes();synchronizeSidenotes(true);window.addEventListener('scroll',requestSyncUpdate,{passive:true});let resizeTimeout;window.addEventListener('resize',()=>{clearTimeout(resizeTimeout);resizeTimeout=setTimeout(()=>{synchronizeSidenotes(true);},200);});},{timeout:1000});});document.querySelectorAll('sup[id^="fnref:"] a.footnote-ref').forEach((ref)=>{const tooltip=document.getElementById('footnote-tooltip');if(!tooltip)return;ref.addEventListener('mouseenter',()=>{if(window.innerWidth>=1024){return;}
const href=ref.getAttribute('href');if(!href||!href.startsWith('#fn:'))return;const footnoteId=href.slice(1);const footnote=document.getElementById(footnoteId);if(footnote){const clone=footnote.cloneNode(true);const backRef=clone.querySelector('.footnote-backref');if(backRef)backRef.remove();tooltip.innerHTML=clone.innerHTML;tooltip.style.display='block';const refRect=ref.getBoundingClientRect();tooltip.style.top=`${refRect.bottom + window.scrollY + 5}px`;tooltip.style.left=`${refRect.left + window.scrollX}px`;const onLeave=()=>{tooltip.style.display='none';ref.removeEventListener('mouseleave',onLeave);};ref.addEventListener('mouseleave',onLeave);}});});